// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  bankAccounts BankAccount[]
  categories   TransactionCategory[]

  @@map("users")
}

enum BankAccountType {
  CHECKING
  INVESTMENT
  CASH

  @@map("bank_account_type")
}

model BankAccount {
  id             Int             @id @default(autoincrement())
  uuid           String          @unique @default(uuid()) @db.Uuid
  userId         Int             @map("user_id")
  name           String
  initialBalance Float           @map("initial_balance")
  type           BankAccountType
  color          String
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("bank_accounts")
}

enum TransactionType {
  INCOME
  EXPENSE

  @@map("transaction_type")
}

model TransactionCategory {
  id        Int             @id @default(autoincrement())
  uuid      String          @unique @default(uuid()) @db.Uuid
  userId    Int             @map("user_id")
  name      String
  icon      String
  type      TransactionType
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("transaction_categories")
}
